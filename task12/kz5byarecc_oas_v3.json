{
  "openapi": "3.0.1",
  "info": {
    "title": "Task 12 API",
    "version": "2025-04-03T19:08:31Z",
    "description": "An API for managing tables, reservations, user authentication, and bookings."
  },
  "servers": [
    {
      "url": "https://kz5byarecc.execute-api.eu-west-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/signin": {
      "post": {
        "summary": "Sign In",
        "description": "Authenticate a user using credentials.",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Successfully signed in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid payload format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Incorrect credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Sign Up",
        "description": "Register a new user.",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Successfully registered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "List Tables",
        "description": "Retrieve all available tables including their metadata (name, ID, capacity).",
        "tags": ["Tables"],
        "security": [
          {
            "authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the list of tables.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Table"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while fetching tables.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "summary": "Create a Table",
        "description": "Add a new table to the system.",
        "tags": ["Tables"],
        "security": [
          {
            "authorizer": []
          }
        ],
        "requestBody": {
          "description": "The data required to create a table.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the table.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/reservations": {
      "get": {
        "summary": "List Reservations",
        "description": "Retrieve all reservations in the system.",
        "tags": ["Reservations"],
        "security": [
          {
            "authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched reservations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while fetching reservations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user's name."
          },
          "email": {
            "type": "string",
            "description": "The user's email."
          }
        }
      },
      "Table": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the table."
          },
          "name": {
            "type": "string",
            "description": "The name of the table."
          },
          "capacity": {
            "type": "integer",
            "description": "The seating capacity of the table."
          }
        },
        "required": ["id", "name", "capacity"]
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the reservation."
          },
          "tableId": {
            "type": "string",
            "description": "The ID of the table reserved."
          },
          "timestamp": {
            "type": "string",
            "description": "Time of reservation (ISO 8601 format)."
          },
          "guestName": {
            "type": "string",
            "description": "Name of the guest."
          }
        },
        "required": ["id", "tableId", "timestamp", "guestName"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Error message."
          }
        }
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": ["simple-booking-userpool"],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}